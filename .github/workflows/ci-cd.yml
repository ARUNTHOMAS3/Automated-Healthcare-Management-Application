name: CI/CD Pipeline - Healthcare Frontend

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Docker Buildx (for multi-platform builds)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 3: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: Build and push Docker image
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/healthcare-frontend:latest

      # Step 5: Deployment stage (example - using SSH)
      - name: Deploy to Server
        if: github.ref == 'refs/heads/main'
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/healthcare-frontend:latest
            docker stop healthcare-frontend || true
            docker rm healthcare-frontend || true
            docker run -d -p 80:80 --name healthcare-frontend ${{ secrets.DOCKER_USERNAME }}/healthcare-frontend:latest

      # Step 6: Verify deployment
      - name: Verify Deployment
        run: |
          sleep 10
          STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://${{ secrets.SERVER_IP }})
          if [ "$STATUS" == "200" ]; then
            echo "✅ Deployment successful!"
          else
            echo "❌ Deployment verification failed!"
            exit 1
          fi
